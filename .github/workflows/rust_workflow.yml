name: Rust-Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
        - uses: actions/checkout@v3
        - name: Config
          if: matrix.os == 'ubuntu-latest'
          run: |
            sudo apt update
            sudo apt install cargo
            sudo apt install libpcap-dev
        - name: Build
          if: matrix.os == 'ubuntu-latest'
          run: sudo cargo build --verbose
        - name: Tests
          if: matrix.os == 'ubuntu-latest'
          run: sudo cargo test --verbose
        - name: Update cargo config to use Git CLI (windows)
          if: matrix.os == 'windows-latest'
          run: Set-Content -Path $env:USERPROFILE\.cargo\config.toml "[net]`ngit-fetch-with-cli = true"
        - name: Install WinPcap
          if: matrix.os == 'windows-latest'
          run: |
            cinst -y winpcap --version 4.1.3.20161116
            (New-Object System.Net.WebClient).DownloadFile("https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip", "C:/WpdPack.zip")
            Expand-Archive -LiteralPath C:/WpdPack.zip -DestinationPath C:/
            echo "LIB=C:/WpdPack/Lib/x64" >> $env:GITHUB_ENV
        - name: Build
          if: matrix.os == 'windows-latest'
          run: cargo build --verbose
